//
//  ArticleViewController.swift
//  yaaulyanenkovPW5
//
//  Created by Ярослав Ульяненков on 21.11.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ArticleDisplayLogic: AnyObject
{
    func displayArticles(viewModels: [Article.Fetch.ArticleModel])
}

class ArticleViewController: UITableViewController, ArticleDisplayLogic
{
    let cellId = "ArticleCell"
    var interactor: (ArticleBusinessLogic & ArticleDataStore)?
    var router: (NSObjectProtocol & ArticleRoutingLogic & ArticleDataPassing)?
    var articles: [Article.Fetch.ArticleModel] = []
    var currentPageIndex = 1


    private func setup()
    {
        let viewController = self
        let interactor = ArticleInteractor()
        let presenter = ArticlePresenter()
        let router = ArticleRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
        tableView = UITableView(frame: .zero, style: .grouped)
        self.tableView.delegate = self
        self.tableView.dataSource = self
        refreshControl = UIRefreshControl();
        refreshControl?.attributedTitle = NSAttributedString(string: "Pull to refresh")
        refreshControl?.addTarget(self, action: #selector(setupData), for: .valueChanged)
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
    }

    // MARK: View lifecycle

    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.navigationItem.title = "Articles"
        setup()
        setupData()
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath:
                   IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(
            withIdentifier: cellId,
            for: indexPath
        ) as! ArticleCell
        
        cell.setContent(article: articles[indexPath.row])
        return cell
    }


    override func tableView(_ tableView: UITableView, numberOfRowsInSection
                   section: Int) -> Int {
        return articles.count
    }
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        guard let url = articles[indexPath.row].articleUrl else {return}
        router?.showArticle(source: self, articleURL: url)
    }
    
    override func tableView(_ tableView: UITableView,
                       trailingSwipeActionsConfigurationForRowAt indexPath: IndexPath) -> UISwipeActionsConfiguration? {
        let share = UIContextualAction(style: .normal,
                                         title: "Share") { [weak self] (action, view, completionHandler) in
            self?.shareNews(text: self?.articles[indexPath.row].articleUrl?.absoluteString ?? "")
                                            completionHandler(true)
        }
        share.backgroundColor = .systemBlue
        let configuration = UISwipeActionsConfiguration(actions: [share])
        return configuration
    }
    
    override func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        if indexPath.row + 1 == articles.count {
            uploadMoreNews()
        }
    }

    func shareNews(text: String) {
        let textShare = [ text ]
        let activityViewController = UIActivityViewController(activityItems: textShare , applicationActivities: nil)
        activityViewController.popoverPresentationController?.sourceView = self.view
        self.present(activityViewController, animated: true, completion: nil)
    }
    
    @objc func setupData()
    {
        self.tableView.register(ArticleCell.self, forCellReuseIdentifier: cellId)
        let request = Article.Fetch.Request(pageSize: 8, pageIndex: currentPageIndex)
        currentPageIndex += 1
        interactor?.getArticles(request: request)
    }
    
    func uploadMoreNews()
    {
        let request = Article.Fetch.Request(pageSize: 8, pageIndex: currentPageIndex)
        currentPageIndex += 1
        interactor?.getArticles(request: request)
    }

    func displayArticles(viewModels: [Article.Fetch.ArticleModel])
    {
        DispatchQueue.main.async {
            self.articles.append(contentsOf: viewModels)
            self.refreshControl?.endRefreshing();
            self.tableView.reloadData()
        }

    }
}
