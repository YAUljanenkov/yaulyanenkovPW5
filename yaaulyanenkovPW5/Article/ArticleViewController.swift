//
//  ArticleViewController.swift
//  yaaulyanenkovPW5
//
//  Created by Ярослав Ульяненков on 21.11.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ArticleDisplayLogic: AnyObject
{
  func displayArticles(viewModel: Article.Fetch.ViewModel)
}

class ArticleViewController: UITableViewController, ArticleDisplayLogic
{
    let cellId = "ArticleCell"
    var interactor: ArticleBusinessLogic?
    var router: (NSObjectProtocol & ArticleRoutingLogic & ArticleDataPassing)?


    private func setup()
    {
    let viewController = self
    let interactor = ArticleInteractor()
    let presenter = ArticlePresenter()
    let router = ArticleRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
    }

    // MARK: View lifecycle

    override func viewDidLoad()
    {
        super.viewDidLoad()
        self.navigationItem.title = "Articles"
        doSomething()
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath:
                   IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(
            withIdentifier: cellId,
            for: indexPath
        ) as! ArticleCell
        
        cell.setContent(id: indexPath.row)
        return cell
    }


    override func tableView(_ tableView: UITableView, numberOfRowsInSection
                   section: Int) -> Int {
        return 30
    }


    func doSomething()
    {
        self.tableView.register(ArticleCell.self, forCellReuseIdentifier: cellId)
        let request = Article.Fetch.Request()
        interactor?.doSomething(request: request)
    }

    func displayArticles(viewModel: Article.Fetch.ViewModel)
    {
    //nameTextField.text = viewModel.name
    }
}
